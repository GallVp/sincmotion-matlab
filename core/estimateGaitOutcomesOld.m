function [symIndex,...
    stepLengths,...
    leftStepLengths,...
    rightStepLengths,...
    stepTimes,...
    leftStepTimes,...
    rightStepTimes]             = estimateGaitOutcomes(accelData,...
                                    rotData, gyroData, fs,...
                                    personHeight, isAndroid, debugFlag)

%% Preprocess data
[accelDataRotated, gyroData]    = preprocessGaitData(accelData,...
                                    rotData, gyroData, ...
                                    fs, isAndroid);

%% Compute outputs

% Symmetry outcomes
[symIndex, tStrideSample]       = gaitSymmetryIndex(accelDataRotated,...
                                    fs, debugFlag);

accelVert                       = accelDataRotated(tStrideSample + 1:end, 3) - mean(accelDataRotated(tStrideSample + 1:end, 3));
gAP                             = gyroData(tStrideSample + 1:end, 3);

height                      = personHeight; % Meters
L                           = height*0.5;   % Meter
fL                          = height*0.16;  % Meter

% Get gait events
[ICs, isLeftIC, ~]          = footEvents(accelVert, gAP, fs, debugFlag);

[stepLengths, leftStepLengths,...
    rightStepLengths,...
    ~]                      = vertMovements(accelVert, L, fL, fs, tStrideSample, ICs, isLeftIC, debugFlag);

stepTimes                   = diff(ICs)./fs;
leftStepTimes               = stepTimes(isLeftIC(2:end));
rightStepTimes              = stepTimes(~isLeftIC(2:end));
end

