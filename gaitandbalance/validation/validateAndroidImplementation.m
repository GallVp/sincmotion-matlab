%% Setup

clear
close all
clc

%% Constants
TEST_TOL                        = 1e-10;
FS                              = 100;
IS_ANDROID                      = 1;                % ANDROID=1, else IOS
SKIP_AT_RANDOM                  = 1;
SKIP_PERCENTAGE                 = 80;
rng shuffle

%% Validation data and outcomes
%
% The validation outcomes for gait were originally produced
% on Tue Jul 26 13:03:53 2022 +1200 and have not been published yet.
%
% The validation outcomes for static tasks were originally produced
% on Sun Jan 7 15:06:47 2024 +1300 and have not been published yet.
%
% The raw data and the outcomes are not checked into version control due to
% lask of permission from the Ethics Committee.

DATA_ROOT                       = fullfile('validation_data', 'android_navs');
APP_DATA                        = fullfile(DATA_ROOT,...
                                    'app_data');
PARTICIPANT_CHARACTERISTICS     = fullfile(DATA_ROOT,...
                                    'data_tables',...
                                    'PartCharacteristics.csv');
GAIT_OUTCOMES                   = fullfile(DATA_ROOT,...
                                    'data_tables',...
                                    'ComfortableGaitOutcomes_a1e4b14.csv');
STATIC_OUTCOMES                 = fullfile(DATA_ROOT,...
                                    'data_tables',...
                                    'StaticBalanceOutcomes_ad2685f.csv');
TEST_NO_MAP                     = [1 3 5]; % 1 => 1, 2 => 3, 3 => 5
ADD_SPACE_FOR_PARTICIPANT       = [21 23 24];

%% Validate static task outcomes
staticOutcomesTable             = readtable(STATIC_OUTCOMES,...
                                    'VariableNamingRule', 'preserve');

for i=1:height(staticOutcomesTable)
    caseOutcomes = staticOutcomesTable(i, :);

    if caseOutcomes.Device{:} == 'Y'
        continue;               % Skip IOS case
    end

    if string(caseOutcomes.Qual{:}(end-1:end)) == "HT"
        continue;               % Skip non-standard cases
    end

    fprintf('Processing %-10s %-2s for Part %-2d Test %-2d\n',...
        caseOutcomes.Task{:}, caseOutcomes.Qual{:},...
        caseOutcomes.Part, TEST_NO_MAP(caseOutcomes.Test));

    if SKIP_AT_RANDOM && binornd(1, SKIP_PERCENTAGE/100)
        disp('....................................Skipped');
        continue
    end

    spacer                      = '';
    if ismember(caseOutcomes.Part, ADD_SPACE_FOR_PARTICIPANT)
        spacer                  = ' ';
    end

    dataFilePath                = fullfile(sprintf('Sub%0.2d X',...
                                    caseOutcomes.Part),...
                                    sprintf(...
                                    'Sub%s%0.2d Test no %d on %0.2d-%s-%d %s %s.csv',...
                                    spacer,...
                                    caseOutcomes.Part,...
                                    TEST_NO_MAP(caseOutcomes.Test),...
                                    caseOutcomes.Day,...
                                    caseOutcomes.Month{:},...
                                    caseOutcomes.Year,...
                                    caseOutcomes.Task{:}, ...
                                    caseOutcomes.Qual{:}));

    [accelData,...
    rotData,...
    timeVect,...
    gyroData]                   = loadGnBExportedFile(FS,...
                                    fullfile(APP_DATA, dataFilePath));

    expectedOutcomes            = [...
                                    caseOutcomes.("Stability R"),...
                                    caseOutcomes.("Stability ML"),...
                                    caseOutcomes.("Stability AP")...
                                    ];
    computedOutcomes            = estimateGnBStaticOutcomes(accelData,...
                                    rotData, FS, IS_ANDROID);

    condition                   = all(...
                                    (expectedOutcomes - computedOutcomes)...
                                    < TEST_TOL);

    if condition
        disp('.....................................Passed');
    else
        expectedOutcomes
        computedOutcomes
        error('.....................................Failed');
    end
end

%% Validate gait outcomes
gaitOutcomesTable               = readtable(GAIT_OUTCOMES,...
                                    'VariableNamingRule', 'preserve');
participantTable                = readtable(PARTICIPANT_CHARACTERISTICS,...
                                    'VariableNamingRule', 'preserve');

for i=1:height(gaitOutcomesTable)
    caseOutcomes = gaitOutcomesTable(i, :);

    if caseOutcomes.Device{:} == 'Y'
        continue;               % Skip IOS case
    end

    fprintf('Processing %-10s %-2s for Part %-2d Test %-2d\n',...
        caseOutcomes.Task{:}, caseOutcomes.Qual{:},...
        caseOutcomes.Part, TEST_NO_MAP(caseOutcomes.Test));

    if SKIP_AT_RANDOM && binornd(1, SKIP_PERCENTAGE/100)
        disp('....................................Skipped');
        continue
    end

    spacer                      = '';
    if ismember(caseOutcomes.Part, ADD_SPACE_FOR_PARTICIPANT)
        spacer                  = ' ';
    end
    
    dataFilePath                = fullfile(sprintf('Sub%0.2d X',...
                                    caseOutcomes.Part),...
                                    sprintf(...
                                    'Sub%s%0.2d Test no %d on %0.2d-%s-%d %s %s.csv',...
                                    spacer,...
                                    caseOutcomes.Part,...
                                    TEST_NO_MAP(caseOutcomes.Test),...
                                    caseOutcomes.Day,...
                                    caseOutcomes.Month{:},...
                                    caseOutcomes.Year,...
                                    caseOutcomes.Task{:}, ...
                                    caseOutcomes.Qual{:}));

    [accelData,...
    rotData,...
    timeVect,...
    gyroData]                   = loadGnBExportedFile(FS,...
                                    fullfile(APP_DATA, dataFilePath));

    personHeight                = table2array(participantTable(...
                                    participantTable.Part == caseOutcomes.Part,...
                                    'Height')) / 100;

    computedOutcomes            = estimateGnBGaitOutcomes(timeVect,...
                                    accelData,...
                                    rotData,...
                                    gyroData,...
                                    FS,...
                                    personHeight,...
                                    IS_ANDROID, 0);
    comparableComputedOutcomes  = [...
                                    computedOutcomes(1),...
                                    computedOutcomes(2),...
                                    computedOutcomes(5),...
                                    computedOutcomes(8),...
                                    computedOutcomes(9),...
                                    computedOutcomes(10),...
                                    computedOutcomes(11),...
                                    computedOutcomes(12)];
    expectedOutcomes            = [...
                                    caseOutcomes.("Gait symmetry"),...
                                    caseOutcomes.("Step length"),...
                                    caseOutcomes.("Step time"),...
                                    caseOutcomes.("Step length var"),...
                                    caseOutcomes.("Step time var"),...
                                    caseOutcomes.("Step length asym"),...
                                    caseOutcomes.("Step time asym"),...
                                    caseOutcomes.("Step velocity")];

    condition                   = all(...
                                    (...
                                    expectedOutcomes...
                                    - comparableComputedOutcomes)...
                                    < TEST_TOL);

    if condition
        disp('.....................................Passed');
    else
        expectedOutcomes
        comparableComputedOutcomes
        error('.....................................Failed');
    end
end